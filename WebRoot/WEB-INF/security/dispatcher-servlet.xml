<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

    <mvc:annotation-driven/>
    <context:component-scan base-package="com"/>
    <aop:aspectj-autoproxy/> <!-- 开启AOP  -->
  
  
   
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/jsp/"
          p:suffix=".jsp" 
    /> 
          
          
          
     <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">    
		<property name="messageConverters">    
			<list >    
				<ref bean="mappingJacksonHttpMessageConverter" />    
			</list>    
		</property>    
	</bean>
	<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />    
	<!-- 数据库连接配置 -->
<!-- 		<bean id="dataSource" -->
<!-- 			class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!-- 			<property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
<!-- 			<property name="url" value="jdbc:mysql://localhost:3306/truth" /> -->
<!-- 			<property name="username" value="root" /> -->
<!-- 			<property name="password" value="root" /> -->
<!-- 		</bean> -->
			<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> 
              <property name="driverClassName"> 
                     <value>com.mysql.jdbc.Driver</value> 
              </property> 
              <property name="url"> 
                     <value>jdbc:mysql://localhost:3306/emmanuel</value> 
              </property> 
              <property name="username"> 
                     <value>root</value> 
              </property> 
              <property name="password"> 
                     <value>123456</value> 
              </property> 
              <property name="maxActive"> 
                     <value>255</value> 
              </property> 
              <property name="maxIdle"> 
                     <value>2</value> 
              </property> 
              <property name="maxWait"> 
                     <value>120000</value> 
              </property> 
      	 </bean> 
<!--  以下为DBCP连接池参数配置:
		initialSize： 
		池启动时创建的连接数量
		
		maxActive：
		同一时间可以从池分配的最多连接数量。设置为0时表示无限制。
		
		maxIdle：
		池里不会被释放的最多空闲连接数量。设置为0时表示无限制。
		
		maxOpenPreparedStatements：
		同一时间能够从语句池里分配的已备语句的最大数量。设置为0时表示无限制。
		
		maxWait [官网为：maxWaitMillis,但实际是用前面的]：
		在抛出异常之前，池等待连接被回收的最长时间（当没有可用连接时）。设置为-1表示无限等待。
		
		minEvictableIdleTimeMillis：
		连接保持空闲而不被驱逐的最长时间。
		
		minIdle：
		在不新建连接的条件下，池中保持空闲的最少连接数。
		
		poolPreparedStatements：
		是否对已备语句进行池管理（布尔值）。
		
		timeBetweenEvictionRunsMillis： 
		毫秒秒检查一次连接池中空闲的连接,
		
		minEvictableIdleTimeMillis：
		把空闲时间超过minEvictableIdleTimeMillis毫秒的连接断开, 直到连接池中的连接数到minIdle为止 连接池中连接可空闲的时间,毫秒 
		
		defaultAutoCommit：
		默认的SQL语句自动提交状态(开启或关闭)设置由连接池本身设置(false由连接池定)，不设置该值setAutoCommit方法不被调用；
		
		validationQuery：
		要求必需是个SELECT类型的SQL语句，至少返回一行，由于它会在所有应用的SQL语句执行之前运行一次，所以原则上应该对数据库服务器带来的压力越小越好，推荐使用“SELECT 1”
		
		testOnBorrow：
		表示从连接池中获取连接前是否运行validationQuery，true=运行[默认]，false=不运行；
		
		testOnReturn：
		表示将连接归还连接池前是否运行validationQuery，true=运行，false=不运行[默认]；
-->	

		<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		    <!-- 国际化信息所在的文件名 -->                     
		    <property name="basename" value="messages/messages" />   
		    <!-- 如果在国际化资源文件中找不到对应代码的信息，就用这个代码作为名称  -->               
		    <property name="useCodeAsDefaultMessage" value="true" />           
		</bean>

	
	


		<!-- 引入所有*Mapper.xml文件  -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
<!-- 			<property name="configLocation" value="/WEB-INF/mybatis/mybatis-config.xml" /> -->
 			<property name="mapperLocations" value="/WEB-INF/mybatis/mapper/*.xml" />
			<!-- <property name="typeAliasesPackage" value="com.tiantian.ckeditor.model" 
				/> -->
		</bean>
	
		<!-- 注册mybatis mappers -->
		<bean id="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
	       <property name="mapperInterface"  
	           value="com.truth.security.mapper.UserMapper" />  
	       <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	    </bean>
	    
	    <bean id="roleMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
	       <property name="mapperInterface"  
	           value="com.truth.security.mapper.RoleMapper" />  
	       <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	    </bean>
	    
	    <bean id="powerMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
	       <property name="mapperInterface"  
	           value="com.truth.security.mapper.PowerMapper" />  
	       <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	    </bean>
	    
	    <bean id="resourceMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">  
	       <property name="mapperInterface"  
	           value="com.truth.security.mapper.ResourceMapper" />  
	       <property name="sqlSessionFactory" ref="sqlSessionFactory" />  
	    </bean>
	    

	<!-- 事务申明 -->
 	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 		<property name="dataSource" >
 			<ref local="dataSource"/>
 		</property>
 	</bean> 
 	
	<!-- Aop切入点 -->
	<tx:advice id="txadvice" transaction-manager="transactionManager">
 		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED"/>
     		<tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
 		</tx:attributes> 
 	</tx:advice> 
 	<aop:config> 
		<aop:pointcut expression="within(com.truth.security.dao.*)" id="serviceOperation" /> 
 		<aop:advisor advice-ref="txadvice" pointcut-ref="serviceOperation"/>
 	</aop:config>
	
</beans>